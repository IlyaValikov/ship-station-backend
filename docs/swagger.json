{
    "swagger": "2.0",
    "info": {
        "description": "API server for ShipStation application",
        "title": "ShipStation RestAPI",
        "contact": {},
        "version": "1.0"
    },
    "host": "http://localhost:8080",
    "basePath": "/",
    "paths": {
        "/request": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех не удаленных заявок",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Заявка"
                ],
                "summary": "Получение списка заявок",
                "parameters": [
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Начало даты формирования",
                        "name": "startFormationDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Конец даты формирования",
                        "name": "endFormationDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Статус заявки",
                        "name": "requestStatus",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список заявок",
                        "schema": {
                            "$ref": "#/definitions/model.GetRequests"
                        }
                    },
                    "400": {
                        "description": "Обработанная ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/request/{requestID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает информацию о заявке по её идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Заявка"
                ],
                "summary": "Получение заявки по идентификатору",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор заявки",
                        "name": "requestID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о заявке",
                        "schema": {
                            "$ref": "#/definitions/model.GetRequestByID"
                        }
                    },
                    "400": {
                        "description": "Обработанная ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет заявку по её идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Заявка"
                ],
                "summary": "Удаление заявки",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор заявки",
                        "name": "requestID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Номер рейса",
                        "name": "searchFlightNumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Начало даты формирования",
                        "name": "startFormationDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Конец даты формирования",
                        "name": "endFormationDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Статус заявки",
                        "name": "requestStatus",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список заявок",
                        "schema": {
                            "$ref": "#/definitions/model.GetRequests"
                        }
                    },
                    "400": {
                        "description": "Обработанная ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/request/{requestID}/status/moderator": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет статус заявки для модератора по идентификатору заявки",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Заявка"
                ],
                "summary": "Обновление статуса заявки для модератора",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор заявки",
                        "name": "requestID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новый статус заявки",
                        "name": "requestStatus",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.StatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о заявке",
                        "schema": {
                            "$ref": "#/definitions/model.GetRequestByID"
                        }
                    },
                    "400": {
                        "description": "Обработанная ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/request/{requestID}/status/user": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет статус заявки для пользователя по идентификатору заявки",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Заявка"
                ],
                "summary": "Обновление статуса заявки для пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор заявки",
                        "name": "requestID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о заявке",
                        "schema": {
                            "$ref": "#/definitions/model.GetRequestByID"
                        }
                    },
                    "400": {
                        "description": "Обработанная ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ship": {
            "get": {
                "description": "Возращает список всех активных судов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Судно"
                ],
                "summary": "Получение списка судов",
                "parameters": [
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Название судна",
                        "name": "shipName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список судов",
                        "schema": {
                            "$ref": "#/definitions/model.GetShips"
                        }
                    },
                    "400": {
                        "description": "Обработанная ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает новое судно с предоставленными данными",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Судно"
                ],
                "summary": "Создание нового судна",
                "parameters": [
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Название судна",
                        "name": "shipName",
                        "in": "query"
                    },
                    {
                        "description": "Пользовательский объект в формате JSON",
                        "name": "ship",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ShipChange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список судов",
                        "schema": {
                            "$ref": "#/definitions/model.GetShips"
                        }
                    },
                    "400": {
                        "description": "Обработанная ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "У пользователя нет прав для этого запроса",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ship/{shipID}": {
            "get": {
                "description": "Возвращает информацию о суднe по его ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Судно"
                ],
                "summary": "Получение судна по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID судна",
                        "name": "shipID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о суднe",
                        "schema": {
                            "$ref": "#/definitions/model.Ship"
                        }
                    },
                    "400": {
                        "description": "Обработанная ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет информацию о суднe по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Судно"
                ],
                "summary": "Обновление информации о суднe",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID судна",
                        "name": "shipID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о суднe",
                        "schema": {
                            "$ref": "#/definitions/model.Ship"
                        }
                    },
                    "400": {
                        "description": "Обработанная ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "У пользователя нет прав для этого запроса",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет судно по его ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Судно"
                ],
                "summary": "Удаление судна",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID судна",
                        "name": "shipID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Название судна",
                        "name": "shipName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список судов",
                        "schema": {
                            "$ref": "#/definitions/model.GetShips"
                        }
                    },
                    "400": {
                        "description": "Обработанная ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "У пользователя нет прав для этого запроса",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ship/{shipID}/image": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Добавляет изображение к судноу по его ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Судно"
                ],
                "summary": "Добавление изображения к судноу",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID судна",
                        "name": "shipID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Изображение судна",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о суднe с изображением",
                        "schema": {
                            "$ref": "#/definitions/model.Ship"
                        }
                    },
                    "400": {
                        "description": "Обработанная ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "У пользователя нет прав для этого запроса",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ship/{shipID}/request": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Добавляет судно к доставке по его ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Судно"
                ],
                "summary": "Добавление судна к доставке",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID судна",
                        "name": "shipID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Название судна",
                        "name": "shipName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список судов",
                        "schema": {
                            "$ref": "#/definitions/model.GetShips"
                        }
                    },
                    "400": {
                        "description": "Обработанная ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет судно из доставки по его ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Судно"
                ],
                "summary": "Удаление судна из доставки",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID судна",
                        "name": "shipID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Название судна",
                        "name": "shipName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список судов",
                        "schema": {
                            "$ref": "#/definitions/model.GetShips"
                        }
                    },
                    "400": {
                        "description": "Обработанная ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Авторизация пользователя и генерация JWT-токена",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователь"
                ],
                "summary": "Вход пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Токен",
                        "schema": {
                            "$ref": "#/definitions/model.UserLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Обработанная ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Выход пользователя из системы и удаление токена из куков",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователь"
                ],
                "summary": "Выход пользователя",
                "responses": {
                    "200": {
                        "description": "Успешный ответ",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Обработанная ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Регистрация нового пользователя с предоставленной информацией.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователь"
                ],
                "summary": "Регистрация нового пользователя.",
                "parameters": [
                    {
                        "description": "Пользовательский объект в формате JSON",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Токен",
                        "schema": {
                            "$ref": "#/definitions/model.UserLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Обработанная ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "model.GetRequestByID": {
            "type": "object",
            "properties": {
                "completion_date": {
                    "type": "string"
                },
                "creation_date": {
                    "type": "string"
                },
                "formation_date": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "request_id": {
                    "type": "integer"
                },
                "request_status": {
                    "type": "string"
                },
                "ships": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Ship"
                    }
                }
            }
        },
        "model.GetRequests": {
            "type": "object",
            "properties": {
                "completion_date": {
                    "type": "string"
                },
                "creation_date": {
                    "type": "string"
                },
                "formation_date": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "request_id": {
                    "type": "integer"
                },
                "request_status": {
                    "type": "string"
                }
            }
        },
        "model.GetShips": {
            "type": "object",
            "properties": {
                "request_id": {
                    "type": "integer"
                },
                "ships": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Ship"
                    }
                }
            }
        },
        "model.Role": {
            "type": "string",
            "enum": [
                "пользователь",
                "модератор"
            ],
            "x-enum-varnames": [
                "UserRole",
                "ModeratorRole"
            ]
        },
        "model.Ship": {
            "type": "object",
            "properties": {
                "cargo_capacity": {
                    "type": "number"
                },
                "classification": {
                    "type": "string"
                },
                "crew_capacity": {
                    "type": "integer"
                },
                "flag": {
                    "type": "string"
                },
                "max_depth": {
                    "type": "number"
                },
                "max_length": {
                    "type": "number"
                },
                "passenger_capacity": {
                    "type": "integer"
                },
                "photo": {
                    "type": "string"
                },
                "ship_id": {
                    "type": "integer"
                },
                "ship_name": {
                    "type": "string"
                },
                "ship_status": {
                    "type": "string"
                },
                "ship_type": {
                    "type": "string"
                },
                "year_built": {
                    "type": "integer"
                }
            }
        },
        "model.ShipChange": {
            "type": "object",
            "properties": {
                "cargo_capacity": {
                    "type": "number"
                },
                "classification": {
                    "type": "string"
                },
                "crew_capacity": {
                    "type": "integer"
                },
                "flag": {
                    "type": "string"
                },
                "max_depth": {
                    "type": "number"
                },
                "max_length": {
                    "type": "number"
                },
                "passenger_capacity": {
                    "type": "integer"
                },
                "ship_name": {
                    "type": "string"
                },
                "ship_type": {
                    "type": "string"
                },
                "year_built": {
                    "type": "integer"
                }
            }
        },
        "model.StatusRequest": {
            "type": "object",
            "properties": {
                "request_status": {
                    "type": "string"
                }
            }
        },
        "model.UserLoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.UserLoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/model.Role"
                }
            }
        },
        "model.UserRegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}